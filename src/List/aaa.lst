
AVRASM ver. 2.1.30  D:\fin_proj\countup\List\aaa.asm Mon May 23 20:59:57 2016

D:\fin_proj\countup\List\aaa.asm(1072): warning: Register r4 already defined by the .DEF directive
D:\fin_proj\countup\List\aaa.asm(1073): warning: Register r6 already defined by the .DEF directive
D:\fin_proj\countup\List\aaa.asm(1074): warning: Register r8 already defined by the .DEF directive
D:\fin_proj\countup\List\aaa.asm(1075): warning: Register r10 already defined by the .DEF directive
D:\fin_proj\countup\List\aaa.asm(1076): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32
                 ;Program type             : Application
                 ;Clock frequency          : 8,000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _satuan=R4
                 	.DEF _puluhan=R6
                 	.DEF _data=R8
                 	.DEF _data_temp=R10
                 	.DEF _x=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x3:
00002a 063f
00002b 4f5b
00002c 6d66
00002d 077d      	.DB  0x3F,0x6,0x5B,0x4F,0x66,0x6D,0x7D,0x7
00002e 6f7f      	.DB  0x7F,0x6F
                 _0x4:
00002f 063f
000030 4f5b
000031 6d66
000032 077d      	.DB  0x3F,0x6,0x5B,0x4F,0x66,0x6D,0x7D,0x7
000033 6f7f      	.DB  0x7F,0x6F
                 _0x5:
000034 063f
000035 4f5b
000036 6d66
000037 077d      	.DB  0x3F,0x6,0x5B,0x4F,0x66,0x6D,0x7D,0x7
000038 6f7f      	.DB  0x7F,0x6F
                 _0x6:
000039 063f
00003a 4f5b
00003b 6d66      	.DB  0x3F,0x6,0x5B,0x4F,0x66,0x6D
                 _0x7:
00003c 063f      	.DB  0x3F,0x6
                 
                 __GLOBAL_INI_TBL:
00003d 000a      	.DW  0x0A
00003e 0260      	.DW  _poin
00003f 0054      	.DW  _0x3*2
                 
000040 000a      	.DW  0x0A
000041 026a      	.DW  _point
000042 005e      	.DW  _0x4*2
                 
000043 000a      	.DW  0x0A
000044 0274      	.DW  _det1
000045 0068      	.DW  _0x5*2
                 
000046 0006      	.DW  0x06
000047 027e      	.DW  _det
000048 0072      	.DW  _0x6*2
                 
000049 0002      	.DW  0x02
00004a 0284      	.DW  _mnt
00004b 0078      	.DW  _0x7*2
                 
                 _0xFFFFFFFF:
00004c 0000      	.DW  0
                 
                 __RESET:
00004d 94f8      	CLI
00004e 27ee      	CLR  R30
00004f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000050 e0f1      	LDI  R31,1
000051 bffb      	OUT  GICR,R31
000052 bfeb      	OUT  GICR,R30
000053 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000054 e1f8      	LDI  R31,0x18
000055 bdf1      	OUT  WDTCR,R31
000056 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000057 e08d      	LDI  R24,(14-2)+1
000058 e0a2      	LDI  R26,2
000059 27bb      	CLR  R27
                 __CLEAR_REG:
00005a 93ed      	ST   X+,R30
00005b 958a      	DEC  R24
00005c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005e e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000060 93ed      	ST   X+,R30
000061 9701      	SBIW R24,1
000062 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000063 e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000064 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000065 9185      	LPM  R24,Z+
000066 9195      	LPM  R25,Z+
000067 9700      	SBIW R24,0
000068 f061      	BREQ __GLOBAL_INI_END
000069 91a5      	LPM  R26,Z+
00006a 91b5      	LPM  R27,Z+
00006b 9005      	LPM  R0,Z+
00006c 9015      	LPM  R1,Z+
00006d 01bf      	MOVW R22,R30
00006e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006f 9005      	LPM  R0,Z+
000070 920d      	ST   X+,R0
000071 9701      	SBIW R24,1
000072 f7e1      	BRNE __GLOBAL_INI_LOOP
000073 01fb      	MOVW R30,R22
000074 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000075 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000076 bfed      	OUT  SPL,R30
000077 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000078 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000079 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007a e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007b 940c 011f 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include  <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include  <delay.h>
                 ;
                 ;unsigned char poin[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
                 
                 	.DSEG
                 ;unsigned char point[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
                 ;unsigned char det1[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
                 ;unsigned char det[6]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,};
                 ;unsigned char mnt[2]={0x3f,0x06};
                 ;
                 ;int satuan,puluhan,data,data_temp,x;
                 ;int satuan2,puluhan2,data2,data_temp2;
                 ;int detik,detik2,menit,menit2,data0,data_temp0;
                 ;
                 ;
                 ;
                 ;void count(){
                 ; 0000 0010 void count(){
                 
                 	.CSEG
                 _count:
                 ; 0000 0011   data_temp=data;
00007d 0154      	MOVW R10,R8
                 ; 0000 0012   satuan=data_temp%10;
00007e 01d5      	MOVW R26,R10
00007f d111      	RCALL SUBOPT_0x0
000080 012f      	MOVW R4,R30
                 ; 0000 0013   puluhan=(data_temp/10)%10;
000081 01d5      	MOVW R26,R10
000082 d113      	RCALL SUBOPT_0x1
000083 013f      	MOVW R6,R30
                 ; 0000 0014 }
000084 9508      	RET
                 ;
                 ;void count2(){
                 ; 0000 0016 void count2(){
                 _count2:
                 ; 0000 0017   data_temp2=data2;
000085 91e0 028a 	LDS  R30,_data2
000087 91f0 028b 	LDS  R31,_data2+1
000089 93e0 028c 	STS  _data_temp2,R30
00008b 93f0 028d 	STS  _data_temp2+1,R31
                 ; 0000 0018   satuan2=data_temp2%10;
00008d 91a0 028c 	LDS  R26,_data_temp2
00008f 91b0 028d 	LDS  R27,_data_temp2+1
000091 d0ff      	RCALL SUBOPT_0x0
000092 93e0 0286 	STS  _satuan2,R30
000094 93f0 0287 	STS  _satuan2+1,R31
                 ; 0000 0019   puluhan2=(data_temp2/10)%10;
000096 91a0 028c 	LDS  R26,_data_temp2
000098 91b0 028d 	LDS  R27,_data_temp2+1
00009a d0fb      	RCALL SUBOPT_0x1
00009b 93e0 0288 	STS  _puluhan2,R30
00009d 93f0 0289 	STS  _puluhan2+1,R31
                 ; 0000 001A }
00009f 9508      	RET
                 ;
                 ;void timer(){
                 ; 0000 001C void timer(){
                 _timer:
                 ; 0000 001D data_temp0=data0;
0000a0 91e0 0296 	LDS  R30,_data0
0000a2 91f0 0297 	LDS  R31,_data0+1
0000a4 93e0 0298 	STS  _data_temp0,R30
0000a6 93f0 0299 	STS  _data_temp0+1,R31
                 ; 0000 001E detik=data_temp0%10;
0000a8 d0f3      	RCALL SUBOPT_0x2
0000a9 d0e7      	RCALL SUBOPT_0x0
0000aa 93e0 028e 	STS  _detik,R30
0000ac 93f0 028f 	STS  _detik+1,R31
                 ; 0000 001F detik2=(data_temp0/10)%6;
0000ae d0ed      	RCALL SUBOPT_0x2
0000af e0ea      	LDI  R30,LOW(10)
0000b0 e0f0      	LDI  R31,HIGH(10)
0000b1 940e 01fc 	CALL __DIVW21
0000b3 01df      	MOVW R26,R30
0000b4 e0e6      	LDI  R30,LOW(6)
0000b5 e0f0      	LDI  R31,HIGH(6)
0000b6 940e 0201 	CALL __MODW21
0000b8 93e0 0290 	STS  _detik2,R30
0000ba 93f0 0291 	STS  _detik2+1,R31
                 ; 0000 0020 menit=(data_temp0/60)%10;
0000bc d0df      	RCALL SUBOPT_0x2
0000bd e3ec      	LDI  R30,LOW(60)
0000be e0f0      	LDI  R31,HIGH(60)
0000bf 940e 01fc 	CALL __DIVW21
0000c1 01df      	MOVW R26,R30
0000c2 d0ce      	RCALL SUBOPT_0x0
0000c3 93e0 0292 	STS  _menit,R30
0000c5 93f0 0293 	STS  _menit+1,R31
                 ; 0000 0021 menit2=(data_temp0/1000)%10;
0000c7 d0d4      	RCALL SUBOPT_0x2
0000c8 eee8      	LDI  R30,LOW(1000)
0000c9 e0f3      	LDI  R31,HIGH(1000)
0000ca 940e 01fc 	CALL __DIVW21
0000cc 01df      	MOVW R26,R30
0000cd d0c3      	RCALL SUBOPT_0x0
0000ce 93e0 0294 	STS  _menit2,R30
0000d0 93f0 0295 	STS  _menit2+1,R31
                 ; 0000 0022 }
0000d2 9508      	RET
                 ;
                 ;void hasil(){
                 ; 0000 0024 void hasil(){
                 _hasil:
                 ; 0000 0025 //poin team 1
                 ; 0000 0026   PORTE.0=0;
0000d3 9818      	CBI  0x3,0
                 ; 0000 0027   PORTE.1=1;
0000d4 d0cc      	RCALL SUBOPT_0x3
                 ; 0000 0028   PORTE.2=1;
                 ; 0000 0029   PORTE.3=1;
                 ; 0000 002A   PORTE.4=1;
                 ; 0000 002B   PORTE.5=1;
0000d5 9a1d      	SBI  0x3,5
                 ; 0000 002C   PORTE.6=1;
0000d6 9a1e      	SBI  0x3,6
                 ; 0000 002D   PORTE.7=1;
0000d7 9a1f      	SBI  0x3,7
                 ; 0000 002E   PORTD=poin[satuan];
0000d8 e6a0      	LDI  R26,LOW(_poin)
0000d9 e0b2      	LDI  R27,HIGH(_poin)
0000da 0da4      	ADD  R26,R4
0000db 1db5      	ADC  R27,R5
0000dc d0c9      	RCALL SUBOPT_0x4
                 ; 0000 002F   delay_ms(1);
                 ; 0000 0030 
                 ; 0000 0031   PORTE.0=1;
                 ; 0000 0032   PORTE.1=0;
0000dd 9819      	CBI  0x3,1
                 ; 0000 0033   PORTE.2=1;
0000de 9a1a      	SBI  0x3,2
                 ; 0000 0034   PORTE.3=1;
0000df 9a1b      	SBI  0x3,3
                 ; 0000 0035   PORTE.4=1;
0000e0 d0cd      	RCALL SUBOPT_0x5
                 ; 0000 0036   PORTE.5=1;
                 ; 0000 0037   PORTE.6=1;
                 ; 0000 0038   PORTE.7=1;
                 ; 0000 0039   PORTD=poin[puluhan];
0000e1 e6a0      	LDI  R26,LOW(_poin)
0000e2 e0b2      	LDI  R27,HIGH(_poin)
0000e3 0da6      	ADD  R26,R6
0000e4 1db7      	ADC  R27,R7
0000e5 d0c0      	RCALL SUBOPT_0x4
                 ; 0000 003A   delay_ms(1);
                 ; 0000 003B 
                 ; 0000 003C //point team 2
                 ; 0000 003D   PORTE.0=1;
                 ; 0000 003E   PORTE.1=1;
0000e6 9a19      	SBI  0x3,1
                 ; 0000 003F   PORTE.2=0;
0000e7 981a      	CBI  0x3,2
                 ; 0000 0040   PORTE.3=1;
0000e8 9a1b      	SBI  0x3,3
                 ; 0000 0041   PORTE.4=1;
0000e9 d0c4      	RCALL SUBOPT_0x5
                 ; 0000 0042   PORTE.5=1;
                 ; 0000 0043   PORTE.6=1;
                 ; 0000 0044   PORTE.7=1;
                 ; 0000 0045   PORTD=point[satuan2];
0000ea 91e0 0286 	LDS  R30,_satuan2
0000ec 91f0 0287 	LDS  R31,_satuan2+1
0000ee d0c4      	RCALL SUBOPT_0x6
                 ; 0000 0046   delay_ms(1);
                 ; 0000 0047 
                 ; 0000 0048   PORTE.0=1;
                 ; 0000 0049   PORTE.1=1;
                 ; 0000 004A   PORTE.2=1;
                 ; 0000 004B   PORTE.3=0;
0000ef 981b      	CBI  0x3,3
                 ; 0000 004C   PORTE.4=1;
0000f0 d0bd      	RCALL SUBOPT_0x5
                 ; 0000 004D   PORTE.5=1;
                 ; 0000 004E   PORTE.6=1;
                 ; 0000 004F   PORTE.7=1;
                 ; 0000 0050   PORTD=point[puluhan2];
0000f1 91e0 0288 	LDS  R30,_puluhan2
0000f3 91f0 0289 	LDS  R31,_puluhan2+1
0000f5 d0bd      	RCALL SUBOPT_0x6
                 ; 0000 0051   delay_ms(1);
                 ; 0000 0052 
                 ; 0000 0053 //waktu bertanding
                 ; 0000 0054   PORTE.0=1;
                 ; 0000 0055   PORTE.1=1;
                 ; 0000 0056   PORTE.2=1;
                 ; 0000 0057   PORTE.3=1;
0000f6 9a1b      	SBI  0x3,3
                 ; 0000 0058   PORTE.4=0;
0000f7 981c      	CBI  0x3,4
                 ; 0000 0059   PORTE.5=1;
0000f8 9a1d      	SBI  0x3,5
                 ; 0000 005A   PORTE.6=1;
0000f9 9a1e      	SBI  0x3,6
                 ; 0000 005B   PORTE.7=1;
0000fa 9a1f      	SBI  0x3,7
                 ; 0000 005C   PORTD=det1[detik];
0000fb 91e0 028e 	LDS  R30,_detik
0000fd 91f0 028f 	LDS  R31,_detik+1
0000ff d0bf      	RCALL SUBOPT_0x7
                 ; 0000 005D   delay_ms(1);
                 ; 0000 005E 
                 ; 0000 005F   PORTE.0=1;
                 ; 0000 0060   PORTE.1=1;
                 ; 0000 0061   PORTE.2=1;
                 ; 0000 0062   PORTE.3=1;
                 ; 0000 0063   PORTE.4=1;
                 ; 0000 0064   PORTE.5=0;
000100 981d      	CBI  0x3,5
                 ; 0000 0065   PORTE.6=1;
000101 9a1e      	SBI  0x3,6
                 ; 0000 0066   PORTE.7=1;
000102 9a1f      	SBI  0x3,7
                 ; 0000 0067   PORTD=det[detik2];
000103 91e0 0290 	LDS  R30,_detik2
000105 91f0 0291 	LDS  R31,_detik2+1
000107 58e2      	SUBI R30,LOW(-_det)
000108 4ffd      	SBCI R31,HIGH(-_det)
000109 d0bf      	RCALL SUBOPT_0x8
                 ; 0000 0068   delay_ms(1);
                 ; 0000 0069 
                 ; 0000 006A   PORTE.0=1;
00010a 9a18      	SBI  0x3,0
                 ; 0000 006B   PORTE.1=1;
00010b d095      	RCALL SUBOPT_0x3
                 ; 0000 006C   PORTE.2=1;
                 ; 0000 006D   PORTE.3=1;
                 ; 0000 006E   PORTE.4=1;
                 ; 0000 006F   PORTE.5=1;
00010c 9a1d      	SBI  0x3,5
                 ; 0000 0070   PORTE.6=0;
00010d 981e      	CBI  0x3,6
                 ; 0000 0071   PORTE.7=1;
00010e 9a1f      	SBI  0x3,7
                 ; 0000 0072   PORTD=det1[menit];
00010f 91e0 0292 	LDS  R30,_menit
000111 91f0 0293 	LDS  R31,_menit+1
000113 d0ab      	RCALL SUBOPT_0x7
                 ; 0000 0073   delay_ms(1);
                 ; 0000 0074 
                 ; 0000 0075   PORTE.0=1;
                 ; 0000 0076   PORTE.1=1;
                 ; 0000 0077   PORTE.2=1;
                 ; 0000 0078   PORTE.3=1;
                 ; 0000 0079   PORTE.4=1;
                 ; 0000 007A   PORTE.5=1;
000114 9a1d      	SBI  0x3,5
                 ; 0000 007B   PORTE.6=1;
000115 9a1e      	SBI  0x3,6
                 ; 0000 007C   PORTE.7=0;
000116 981f      	CBI  0x3,7
                 ; 0000 007D   PORTD=mnt[menit2];
000117 91e0 0294 	LDS  R30,_menit2
000119 91f0 0295 	LDS  R31,_menit2+1
00011b 57ec      	SUBI R30,LOW(-_mnt)
00011c 4ffd      	SBCI R31,HIGH(-_mnt)
00011d d0ab      	RCALL SUBOPT_0x8
                 ; 0000 007E   delay_ms(1);
                 ; 0000 007F }
00011e 9508      	RET
                 ;
                 ;void main(void){
                 ; 0000 0081 void main(void){
                 _main:
                 ; 0000 0082 data=0;
00011f 2488      	CLR  R8
000120 2499      	CLR  R9
                 ; 0000 0083 data2=0;
000121 e0e0      	LDI  R30,LOW(0)
000122 93e0 028a 	STS  _data2,R30
000124 93e0 028b 	STS  _data2+1,R30
                 ; 0000 0084 data0=1000-400;
000126 e5e8      	LDI  R30,LOW(600)
000127 e0f2      	LDI  R31,HIGH(600)
000128 93e0 0296 	STS  _data0,R30
00012a 93f0 0297 	STS  _data0+1,R31
                 ; 0000 0085 
                 ; 0000 0086 PORTA=0xFF;
00012c efef      	LDI  R30,LOW(255)
00012d bbeb      	OUT  0x1B,R30
                 ; 0000 0087 DDRA=0x00;
00012e e0e0      	LDI  R30,LOW(0)
00012f bbea      	OUT  0x1A,R30
                 ; 0000 0088 
                 ; 0000 0089 PORTB=0xFF;
000130 efef      	LDI  R30,LOW(255)
000131 bbe8      	OUT  0x18,R30
                 ; 0000 008A DDRB=0x00;
000132 e0e0      	LDI  R30,LOW(0)
000133 bbe7      	OUT  0x17,R30
                 ; 0000 008B 
                 ; 0000 008C PORTD=0x00;
000134 bbe2      	OUT  0x12,R30
                 ; 0000 008D DDRD=0xFF;
000135 efef      	LDI  R30,LOW(255)
000136 bbe1      	OUT  0x11,R30
                 ; 0000 008E 
                 ; 0000 008F PORTE=0xFF;
000137 b9e3      	OUT  0x3,R30
                 ; 0000 0090 DDRE=0xFF;
000138 b9e2      	OUT  0x2,R30
                 ; 0000 0091 
                 ; 0000 0092 DDRF=0xFF;
000139 93e0 0061 	STS  97,R30
                 ; 0000 0093 
                 ; 0000 0094 
                 ; 0000 0095   while (1){
                 _0x88:
                 ; 0000 0096       for(x=0;x<5;x++){
00013b 24cc      	CLR  R12
00013c 24dd      	CLR  R13
                 _0x8C:
00013d e0e5      	LDI  R30,LOW(5)
00013e e0f0      	LDI  R31,HIGH(5)
00013f 16ce      	CP   R12,R30
000140 06df      	CPC  R13,R31
000141 f444      	BRGE _0x8D
                 ; 0000 0097         count();
000142 df3a      	RCALL _count
                 ; 0000 0098         count2();
000143 df41      	RCALL _count2
                 ; 0000 0099         hasil();
000144 df8e      	RCALL _hasil
                 ; 0000 009A         timer();
000145 df5a      	RCALL _timer
                 ; 0000 009B       }
000146 01f6      	MOVW R30,R12
000147 9631      	ADIW R30,1
000148 016f      	MOVW R12,R30
000149 cff3      	RJMP _0x8C
                 _0x8D:
                 ; 0000 009C 
                 ; 0000 009D       if (PINB.0==0){
00014a 99b0      	SBIC 0x16,0
00014b c013      	RJMP _0x8E
                 ; 0000 009E         data0--;
00014c e9a6      	LDI  R26,LOW(_data0)
00014d e0b2      	LDI  R27,HIGH(_data0)
00014e 91ed      	LD   R30,X+
00014f 91fd      	LD   R31,X+
000150 9731      	SBIW R30,1
000151 93fe      	ST   -X,R31
000152 93ee      	ST   -X,R30
                 ; 0000 009F         if (data0<=0){
000153 91a0 0296 	LDS  R26,_data0
000155 91b0 0297 	LDS  R27,_data0+1
000157 940e 021d 	CALL __CPW02
000159 f02c      	BRLT _0x8F
                 ; 0000 00A0             data0=0;
00015a e0e0      	LDI  R30,LOW(0)
00015b 93e0 0296 	STS  _data0,R30
00015d 93e0 0297 	STS  _data0+1,R30
                 ; 0000 00A1             }
                 ; 0000 00A2       }
                 _0x8F:
                 ; 0000 00A3 
                 ; 0000 00A4       if (data0==0000){
                 _0x8E:
00015f 91e0 0296 	LDS  R30,_data0
000161 91f0 0297 	LDS  R31,_data0+1
000163 9730      	SBIW R30,0
000164 f429      	BRNE _0x90
                 ; 0000 00A5         PORTF=1;
000165 e0e1      	LDI  R30,LOW(1)
000166 93e0 0062 	STS  98,R30
                 ; 0000 00A6            delay_ms(100);
000168 e6a4      	LDI  R26,LOW(100)
000169 d065      	RCALL SUBOPT_0x9
                 ; 0000 00A7         PORTF=0;
                 ; 0000 00A8       }
                 ; 0000 00A9 
                 ; 0000 00AA       if (PINB.1==0){
                 _0x90:
00016a 99b1      	SBIC 0x16,1
00016b c00c      	RJMP _0x91
                 ; 0000 00AB         PORTF=1;
00016c d069      	RCALL SUBOPT_0xA
                 ; 0000 00AC            delay_ms(30);
                 ; 0000 00AD         PORTF=0;
                 ; 0000 00AE         data++;
00016d 01f4      	MOVW R30,R8
00016e 9631      	ADIW R30,1
00016f 014f      	MOVW R8,R30
                 ; 0000 00AF         if (data>99){
000170 e6e3      	LDI  R30,LOW(99)
000171 e0f0      	LDI  R31,HIGH(99)
000172 15e8      	CP   R30,R8
000173 05f9      	CPC  R31,R9
000174 f41c      	BRGE _0x92
                 ; 0000 00B0             data=data+3;
000175 01f4      	MOVW R30,R8
000176 9633      	ADIW R30,3
000177 014f      	MOVW R8,R30
                 ; 0000 00B1             }
                 ; 0000 00B2       }
                 _0x92:
                 ; 0000 00B3 
                 ; 0000 00B4       if (PINB.2==0){
                 _0x91:
000178 99b2      	SBIC 0x16,2
000179 c015      	RJMP _0x93
                 ; 0000 00B5         PORTF=1;
00017a d05b      	RCALL SUBOPT_0xA
                 ; 0000 00B6            delay_ms(30);
                 ; 0000 00B7         PORTF=0;
                 ; 0000 00B8         data2++;
00017b e8aa      	LDI  R26,LOW(_data2)
00017c e0b2      	LDI  R27,HIGH(_data2)
00017d 91ed      	LD   R30,X+
00017e 91fd      	LD   R31,X+
00017f 9631      	ADIW R30,1
000180 93fe      	ST   -X,R31
000181 93ee      	ST   -X,R30
                 ; 0000 00B9         if (data2>99){
000182 91a0 028a 	LDS  R26,_data2
000184 91b0 028b 	LDS  R27,_data2+1
000186 36a4      	CPI  R26,LOW(0x64)
000187 e0e0      	LDI  R30,HIGH(0x64)
000188 07be      	CPC  R27,R30
000189 f02c      	BRLT _0x94
                 ; 0000 00BA             data2=0;
00018a e0e0      	LDI  R30,LOW(0)
00018b 93e0 028a 	STS  _data2,R30
00018d 93e0 028b 	STS  _data2+1,R30
                 ; 0000 00BB             }
                 ; 0000 00BC       }
                 _0x94:
                 ; 0000 00BD 
                 ; 0000 00BE   };
                 _0x93:
00018f cfab      	RJMP _0x88
                 ; 0000 00BF }
                 _0x95:
000190 cfff      	RJMP _0x95
                 
                 	.DSEG
                 _poin:
000260           	.BYTE 0xA
                 _point:
00026a           	.BYTE 0xA
                 _det1:
000274           	.BYTE 0xA
                 _det:
00027e           	.BYTE 0x6
                 _mnt:
000284           	.BYTE 0x2
                 _satuan2:
000286           	.BYTE 0x2
                 _puluhan2:
000288           	.BYTE 0x2
                 _data2:
00028a           	.BYTE 0x2
                 _data_temp2:
00028c           	.BYTE 0x2
                 _detik:
00028e           	.BYTE 0x2
                 _detik2:
000290           	.BYTE 0x2
                 _menit:
000292           	.BYTE 0x2
                 _menit2:
000294           	.BYTE 0x2
                 _data0:
000296           	.BYTE 0x2
                 _data_temp0:
000298           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
000191 e0ea      	LDI  R30,LOW(10)
000192 e0f0      	LDI  R31,HIGH(10)
000193 940e 0201 	CALL __MODW21
000195 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000196 e0ea      	LDI  R30,LOW(10)
000197 e0f0      	LDI  R31,HIGH(10)
000198 940e 01fc 	CALL __DIVW21
00019a 01df      	MOVW R26,R30
00019b cff5      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
00019c 91a0 0298 	LDS  R26,_data_temp0
00019e 91b0 0299 	LDS  R27,_data_temp0+1
0001a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0001a1 9a19      	SBI  0x3,1
0001a2 9a1a      	SBI  0x3,2
0001a3 9a1b      	SBI  0x3,3
0001a4 9a1c      	SBI  0x3,4
0001a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
0001a6 91ec      	LD   R30,X
0001a7 bbe2      	OUT  0x12,R30
0001a8 e0a1      	LDI  R26,LOW(1)
0001a9 e0b0      	LDI  R27,0
0001aa 940e 01db 	CALL _delay_ms
0001ac 9a18      	SBI  0x3,0
0001ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0001ae 9a1c      	SBI  0x3,4
0001af 9a1d      	SBI  0x3,5
0001b0 9a1e      	SBI  0x3,6
0001b1 9a1f      	SBI  0x3,7
0001b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x6:
0001b3 59e6      	SUBI R30,LOW(-_point)
0001b4 4ffd      	SBCI R31,HIGH(-_point)
0001b5 81e0      	LD   R30,Z
0001b6 bbe2      	OUT  0x12,R30
0001b7 e0a1      	LDI  R26,LOW(1)
0001b8 e0b0      	LDI  R27,0
0001b9 940e 01db 	CALL _delay_ms
0001bb 9a18      	SBI  0x3,0
0001bc 9a19      	SBI  0x3,1
0001bd 9a1a      	SBI  0x3,2
0001be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x7:
0001bf 58ec      	SUBI R30,LOW(-_det1)
0001c0 4ffd      	SBCI R31,HIGH(-_det1)
0001c1 81e0      	LD   R30,Z
0001c2 bbe2      	OUT  0x12,R30
0001c3 e0a1      	LDI  R26,LOW(1)
0001c4 e0b0      	LDI  R27,0
0001c5 940e 01db 	CALL _delay_ms
0001c7 9a18      	SBI  0x3,0
0001c8 cfd8      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
0001c9 81e0      	LD   R30,Z
0001ca bbe2      	OUT  0x12,R30
0001cb e0a1      	LDI  R26,LOW(1)
0001cc e0b0      	LDI  R27,0
0001cd 940c 01db 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x9:
0001cf e0b0      	LDI  R27,0
0001d0 940e 01db 	CALL _delay_ms
0001d2 e0e0      	LDI  R30,LOW(0)
0001d3 93e0 0062 	STS  98,R30
0001d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
0001d6 e0e1      	LDI  R30,LOW(1)
0001d7 93e0 0062 	STS  98,R30
0001d9 e1ae      	LDI  R26,LOW(30)
0001da cff4      	RJMP SUBOPT_0x9
                 
                 
                 	.CSEG
                 _delay_ms:
0001db 9610      	adiw r26,0
0001dc f039      	breq __delay_ms1
                 __delay_ms0:
                +
0001dd ed80     +LDI R24 , LOW ( 0x7D0 )
0001de e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0001df 9701     +SBIW R24 , 1
0001e0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0001e1 95a8      	wdr
0001e2 9711      	sbiw r26,1
0001e3 f7c9      	brne __delay_ms0
                 __delay_ms1:
0001e4 9508      	ret
                 
                 __ANEGW1:
0001e5 95f1      	NEG  R31
0001e6 95e1      	NEG  R30
0001e7 40f0      	SBCI R31,0
0001e8 9508      	RET
                 
                 __DIVW21U:
0001e9 2400      	CLR  R0
0001ea 2411      	CLR  R1
0001eb e190      	LDI  R25,16
                 __DIVW21U1:
0001ec 0faa      	LSL  R26
0001ed 1fbb      	ROL  R27
0001ee 1c00      	ROL  R0
0001ef 1c11      	ROL  R1
0001f0 1a0e      	SUB  R0,R30
0001f1 0a1f      	SBC  R1,R31
0001f2 f418      	BRCC __DIVW21U2
0001f3 0e0e      	ADD  R0,R30
0001f4 1e1f      	ADC  R1,R31
0001f5 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0001f6 60a1      	SBR  R26,1
                 __DIVW21U3:
0001f7 959a      	DEC  R25
0001f8 f799      	BRNE __DIVW21U1
0001f9 01fd      	MOVW R30,R26
0001fa 01d0      	MOVW R26,R0
0001fb 9508      	RET
                 
                 __DIVW21:
0001fc d012      	RCALL __CHKSIGNW
0001fd dfeb      	RCALL __DIVW21U
0001fe f40e      	BRTC __DIVW211
0001ff dfe5      	RCALL __ANEGW1
                 __DIVW211:
000200 9508      	RET
                 
                 __MODW21:
000201 94e8      	CLT
000202 ffb7      	SBRS R27,7
000203 c004      	RJMP __MODW211
000204 95a0      	COM  R26
000205 95b0      	COM  R27
000206 9611      	ADIW R26,1
000207 9468      	SET
                 __MODW211:
000208 fdf7      	SBRC R31,7
000209 dfdb      	RCALL __ANEGW1
00020a dfde      	RCALL __DIVW21U
00020b 01fd      	MOVW R30,R26
00020c f40e      	BRTC __MODW212
00020d dfd7      	RCALL __ANEGW1
                 __MODW212:
00020e 9508      	RET
                 
                 __CHKSIGNW:
00020f 94e8      	CLT
000210 fff7      	SBRS R31,7
000211 c002      	RJMP __CHKSW1
000212 dfd2      	RCALL __ANEGW1
000213 9468      	SET
                 __CHKSW1:
000214 ffb7      	SBRS R27,7
000215 c006      	RJMP __CHKSW2
000216 95a0      	COM  R26
000217 95b0      	COM  R27
000218 9611      	ADIW R26,1
000219 f800      	BLD  R0,0
00021a 9403      	INC  R0
00021b fa00      	BST  R0,0
                 __CHKSW2:
00021c 9508      	RET
                 
                 __CPW02:
00021d 2400      	CLR  R0
00021e 160a      	CP   R0,R26
00021f 060b      	CPC  R0,R27
000220 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  15 r1 :   5 r2 :   0 r3 :   0 r4 :   2 r5 :   1 r6 :   2 r7 :   1 
r8 :   7 r9 :   2 r10:   3 r11:   0 r12:   4 r13:   2 r14:   0 r15:   0 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:   9 r25:   5 r26:  39 r27:  25 r28:   1 r29:   1 r30: 114 r31:  48 
x  :  12 y  :   0 z  :  10 
Registers used: 22 out of 35 (62.9%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   3 
adiw  :   7 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   2 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   2 brmi  :   0 brne  :   7 brpl  :   0 brsh  :   0 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :  11 
cbi   :   8 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   4 
cp    :   3 cpc   :   4 cpi   :   1 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   1 jmp   :  23 ld    :   8 ldd   :   0 ldi   :  65 
lds   :  28 lpm   :   7 lsl   :   1 lsr   :   0 mov   :   0 movw  :  21 
mul   :   0 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   0 out   :  20 pop   :   0 push  :   0 rcall :  38 ret   :  18 
reti  :   0 rjmp  :  14 rol   :   3 ror   :   0 sbc   :   1 sbci  :   5 
sbi   :  31 sbic  :   3 sbis  :   0 sbiw  :   7 sbr   :   1 sbrc  :   1 
sbrs  :   3 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   7 std   :   0 sts   :  28 sub   :   1 subi  :   4 swap  :   0 
tst   :   0 wdr   :   1 
Instructions used: 49 out of 116 (42.2%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000442   1020     70   1090   32768   3.3%
[.dseg] 0x000060 0x00029a      0     58     58    2143   2.7%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 5 warnings
